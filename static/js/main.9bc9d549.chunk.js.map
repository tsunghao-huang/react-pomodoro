{"version":3,"sources":["components/Pomodoro-sub/DefaultBtn.js","components/Pomodoro-sub/DisplayPanel.js","components/TodoApp-sub/utils.js","components/Pomodoro-sub/TimerForm.js","components/Pomodoro.js","components/TodoApp-sub/Form.js","components/TodoApp-sub/FilterButton.js","components/TodoApp-sub/Todo.js","components/TodoApp.js","index.js"],"names":["DefaultBtn","props","className","aria-pressed","currentCounting","value","aria-label","toLowerCase","id","onClick","handleDefaultBtn","lang","LANG_MAP","DisplayPanel","englishHeading","currentTask","name","targetPomodoros","completedPomodoros","mandarinHeading","replace","useEffect","workLength","breakLength","timeLeft","percent","document","querySelector","style","flexBasis","handleProgressBar","role","clockify","handleStartToggle","counting","handleReset","usePrevious","ref","useRef","current","TimerForm","useState","isEditing","setIsEditing","parseInt","newBreakLength","setNewBreakLength","newWorkLength","setNewWorkLength","modal","editBreakLegnthRef","setTimerBtnRef","wasEditing","closeModal","display","handleChange","e","target","focus","window","onclick","event","htmlFor","type","min","max","onChange","required","aria-hidden","preventDefault","handleTimerFormSubmit","handleSubmit","Pomodoro","state","english","bind","tick","handleLanguage","this","setState","documentElement","setAttribute","clearInterval","intervalID","audio","getElementById","pause","currentTime","color","getElementsByTagName","text","includes","play","newCurrentCounting","newTimeLeft","setInterval","updateTaskProgress","timeInSecs","minutes","Math","floor","seconds","defaultBtnLists","map","v","key","length","handleInDecrement","preload","src","React","Component","Form","setName","targetSessions","setTargetSessions","newTodoInputRef","toggleButtonRef","addTodoForm","form","onSubmit","addTask","autoComplete","placeholder","toggleForm","toggleBtn","FilterButton","isPressed","setFilter","Todo","editFieldRef","editButtonRef","setEditing","newName","setNewName","newTargetPomodoros","setNewTargetPomodoros","newCompletedPomodoros","setNewCompletedPomodoros","stopPropagation","setEditingAndPreventBubbling","b","editingTemplate","editTask","viewTemplate","toggleTaskCompleted","completed","aria-live","deleteTask","select","updateCurrentTask","FILTER_MAP","Active","task","Completed","All","FILTER_NAMES","Object","keys","TodoApp","tasks","filter","updatedTasks","setTasks","remainingTasks","sanitizedNewName","editedTaskList","headingText","taskList","filterList","tasksNoun","listHeadingRef","prevTaskLength","sanitizedName","newTask","nanoid","tabIndex","aria-labelledby","DATA","Work","Break","Todos","Add","Edit","Delete","Check","Cancel","Save","Progress","App","localStorage","getItem","setItem","JSON","stringify","localTodo","parse","setLang","t","setCurrentTask","updatedTodos","newTaskList","ReactDOM","render"],"mappings":"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","file":"static/js/main.9bc9d549.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function DefaultBtn(props) {\n    return (\n        <button\n            className='btn toggle-btn'\n            aria-pressed={props.currentCounting === props.value}\n            aria-label={`set current session to ${props.value.toLowerCase()}.`}\n            id={`default-${props.value.toLowerCase()}`}\n            onClick={props.handleDefaultBtn}\n        >\n            {(props.lang === 'en') ? props.value : props.LANG_MAP[props.value]}\n        </button>\n    )\n}","import React, { useEffect } from 'react';\n\nexport default function DisplayPanel(props) {\n    const englishHeading = (\n        <div id='pomodoro-heading'>\n            <p>Time to {props.currentCounting} {(props.currentTask) ? `${props.currentCounting === 'Work' ? 'on' : 'from'} ${props.currentTask.name}` : \"\"}</p>\n            {props.currentTask ?\n                <p>{(props.currentTask.targetPomodoros) ? `Progress: ${props.currentTask.completedPomodoros}/${props.currentTask.targetPomodoros}` : \"\"}</p>\n                : \"\"\n            }\n\n        </div>\n    )\n\n    const mandarinHeading = (\n        <div id='pomodoro-heading'>\n            <p>{(props.currentTask) ? `${props.currentTask.name} 的` : \"\"}{props.LANG_MAP[props.currentCounting].replace(' ', '')}時間</p>\n            {props.currentTask ?\n                <p>{(props.currentTask.targetPomodoros) ? `${props.LANG_MAP['Progress']}: ${props.currentTask.completedPomodoros}/${props.currentTask.targetPomodoros}` : \"\"}</p>\n                : \"\"\n            }\n        </div>\n    )\n\n    function handleProgressBar(currentCounting, workLength, breakLength, timeLeft) {\n        const progressBar = document.querySelector('.progress__filled');\n        const duration = (currentCounting === \"Work\") ? workLength * 60 : breakLength * 60;\n        const percent = (timeLeft / duration) * 100;\n        progressBar.style.flexBasis = `${percent}%`;\n    }\n\n    useEffect(() => {\n        handleProgressBar(props.currentCounting, props.workLength, props.breakLength, props.timeLeft);\n    }, [props.currentCounting, props.workLength, props.breakLength, props.timeLeft])\n\n    return (\n        <div id='display-panel' aria-label=\"pomodoro display panel\">\n            {/* <p id='timer-label' aria-label={`Currently counting for ${props.currentCounting}`}>{(props.lang === 'en') ? props.currentCounting : props.LANG_MAP[props.currentCounting]}</p> */}\n            {(props.lang === 'en') ? englishHeading : mandarinHeading}\n            <div className=\"progress\">\n                <div className=\"progress__filled\"></div>\n            </div>\n            <p id='time-left' role='timer' aria-label={`Duration for ${props.currentCounting}`}>{props.clockify(props.timeLeft)}</p>\n\n            <div id='display-btn-group'>\n                <button\n                    aria-label={`start ${props.currentCounting}`} id=\"start_stop\" onClick={props.handleStartToggle} className='btn-level'>\n                    <i className={`fas ${props.counting ? \"fa-pause\" : \"fa-play\"} fa-3x`}></i>\n                </button>\n                <button aria-label={`reset to default duration, work 25 minutes and break 5 minutes`} id=\"reset\" onClick={props.handleReset} className='btn-level'>\n                    <i className=\"fas fa-redo fa-3x\"></i>\n                </button>\n            </div>\n\n        </div>\n    )\n}","import { useRef, useEffect } from 'react';\n\nexport default function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}","import React, { useRef, useState, useEffect } from 'react';\nimport usePrevious from \"../TodoApp-sub/utils\";\n\nexport default function TimerForm(props) {\n\n    const [isEditing, setIsEditing] = useState(false);\n    const [newBreakLength, setNewBreakLength] = useState(parseInt(props.breakLength));\n    const [newWorkLength, setNewWorkLength] = useState(parseInt(props.workLength));\n\n    useEffect(() => {\n        setNewWorkLength(props.workLength);\n        setNewBreakLength(props.breakLength);\n    }, [props.breakLength, props.workLength])\n\n    // Get the modal\n    const modal = useRef(null);\n    const editBreakLegnthRef = useRef(null);\n    const setTimerBtnRef = useRef(null);\n    const wasEditing = usePrevious(isEditing);\n\n    useEffect(() => {\n        if (!wasEditing && isEditing) {\n            editBreakLegnthRef.current.focus();\n            setNewWorkLength(props.workLength);\n            setNewBreakLength(props.breakLength);\n        } else if (wasEditing && !isEditing) {\n            setTimerBtnRef.current.focus();\n        }\n    }, [isEditing, wasEditing, props.workLength, props.breakLength])\n\n    function openModal() {\n        // When the user clicks on the button, open the modal\n        if (props.counting) return;\n        setIsEditing(!isEditing);\n        modal.current.style.display = \"block\";\n    }\n\n    function closeModal() {\n        // When the user clicks on <span> (x), close the modal\n        setIsEditing(!isEditing);\n        modal.current.style.display = \"none\";\n    }\n\n    function handleChange(e) {\n        if (e.target.id === 'new-break-length') {\n            setNewBreakLength(e.target.value);\n        } else if (e.target.id === 'new-work-length') {\n            setNewWorkLength(e.target.value);\n        }\n\n    }\n\n    function handleSubmit(e) {\n        const max = 60;\n        const min = 1;\n        e.preventDefault();\n\n        if (newBreakLength < min | newBreakLength > max | newWorkLength < min | newWorkLength > max) {\n            return;\n        } else {\n            props.handleTimerFormSubmit(newBreakLength, newWorkLength);\n            closeModal();\n        }\n\n    }\n\n    // When the user clicks anywhere outside of the modal, close it\n    window.onclick = function (event) {\n        if (event.target === modal.current) {\n            modal.current.style.display = \"none\";\n        }\n    }\n\n    return (\n        <div className=\"default-form-modal\">\n            <button\n                id=\"set-timer-btn\"\n                className=\"btn\"\n                onClick={openModal}\n                ref={setTimerBtnRef}\n                aria-label=\"set custom work and break duration\"\n            >\n                <i className=\"fas fa-cog\"></i>\n            </button>\n            <div id=\"myModal\" className=\"modal\" ref={modal}>\n                <div className=\"modal-content\">\n                    <form id=\"timer-form\">\n                        <h2>Timer Setting (minutes)</h2>\n                        <fieldset>\n                            <label htmlFor=\"new-break-length\">Break</label>\n                            <input\n                                id=\"new-break-length\"\n                                type=\"number\"\n                                min=\"1\"\n                                max=\"60\"\n                                value={newBreakLength}\n                                onChange={handleChange}\n                                ref={editBreakLegnthRef}\n                                required={true}\n                            />\n                        </fieldset>\n                        <fieldset>\n                            <label htmlFor=\"new-work-length\">Work</label>\n                            <input\n                                id=\"new-work-length\"\n                                type=\"number\"\n                                min=\"1\"\n                                max=\"60\"\n                                value={newWorkLength}\n                                onChange={handleChange}\n                                required={true}\n                            />\n                        </fieldset>\n\n                        <div id=\"timer-form-btn-group\">\n                            <button\n                                id=\"timer-form-cancel\"\n                                type=\"button\"\n                                className=\"btn timer-form-btns\"\n                                onClick={closeModal}\n                            >\n                                <i className=\"fas fa-times\" aria-hidden=\"true\"></i>\n                                <span className=\"visually-hidden\">Cancel setting custom durations</span>\n                            </button>\n                            <button\n                                id=\"timer-form-save\"\n                                type=\"submit\"\n                                className=\"btn timer-form-btns\"\n                                onClick={(e) => handleSubmit(e)}\n                            >\n                                <i className=\"far fa-save\" aria-hidden=\"true\"></i>\n\n                                <span className=\"visually-hidden\">Save custom durations</span>\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport DefaultBtn from './Pomodoro-sub/DefaultBtn';\nimport DisplayPanel from './Pomodoro-sub/DisplayPanel';\nimport TimerForm from './Pomodoro-sub/TimerForm';\n\nclass Pomodoro extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            breakLength: 5,\n            workLength: 25,\n            timeLeft: 1500,\n            counting: false,\n            currentCounting: 'Work',\n            english: true\n        };\n        this.handleReset = this.handleReset.bind(this);\n        this.clockify = this.clockify.bind(this);\n        this.handleStartToggle = this.handleStartToggle.bind(this);\n        this.tick = this.tick.bind(this);\n        // this.handleInDecrement = this.handleInDecrement.bind(this);\n        this.handleDefaultBtn = this.handleDefaultBtn.bind(this);\n        this.handleLanguage = this.handleLanguage.bind(this);\n        this.handleTimerFormSubmit = this.handleTimerFormSubmit.bind(this);\n    }\n\n    handleLanguage() {\n        this.setState({\n            english: !this.state.english\n        });\n        if (this.state.english) {\n            document.documentElement.setAttribute('lang', 'zh-TW');\n        } else {\n            document.documentElement.setAttribute('lang', 'en');\n        }\n    }\n\n    handleReset() {\n        this.setState({\n            breakLength: 5,\n            workLength: 25,\n            timeLeft: 1500,\n            counting: false,\n            currentCounting: 'Work',\n        });\n        // reset should stop the timer as well\n        clearInterval(this.intervalID);\n\n        // and the audio\n        const audio = document.getElementById('beep');\n        audio.pause();\n        audio.currentTime = 0;\n\n        // and set the color back to default, if it is changed\n        document.getElementById('time-left').style.color = null;\n\n        // and the title\n        document.getElementsByTagName('title')[0].text = 'Pomodoro Clock';\n    }\n\n    handleDefaultBtn(e) {\n        // ignore click, while the clock is counting\n        if (this.state.counting) return;\n        // console.log(e.target.id);\n        if (e.target.id.includes('work')) {\n            this.setState({\n                // workLength: 25,\n                timeLeft: this.state.workLength * 60,\n                counting: false,\n                currentCounting: 'Work',\n            });\n        } else {\n            this.setState({\n                // breakLength: 5,\n                timeLeft: this.state.breakLength * 60,\n                counting: false,\n                currentCounting: 'Break',\n            });\n        }\n    }\n\n    // handleInDecrement(e) {\n    //     // in case the clock is still running, disable handleInDecrement()\n    //     if (this.state.counting) return;\n    //     switch (`${e.currentTarget.id},current:${this.state.currentCounting}`) {\n    //         case 'break-decrement,current:Work':\n    //             if (this.state.breakLength > 1) {\n    //                 this.setState(state => ({\n    //                     breakLength: state.breakLength - 1,\n    //                 }));\n    //                 return;\n    //             } else {\n    //                 return;\n    //             }\n    //         case 'break-increment,current:Work':\n    //             if (this.state.breakLength < 60) {\n    //                 this.setState(state => ({\n    //                     breakLength: state.breakLength + 1\n    //                 }));\n    //                 return;\n    //             } else {\n    //                 return;\n    //             }\n    //         case 'break-decrement,current:Break':\n    //             if (this.state.breakLength > 1) {\n    //                 this.setState(state => ({\n    //                     breakLength: state.breakLength - 1,\n    //                     timeLeft: state.timeLeft - 60,\n    //                 }));\n    //                 return;\n    //             } else {\n    //                 return;\n    //             }\n    //         case 'break-increment,current:Break':\n    //             if (this.state.breakLength < 60) {\n    //                 this.setState(state => ({\n    //                     breakLength: state.breakLength + 1,\n    //                     timeLeft: state.timeLeft + 60,\n    //                 }));\n    //                 return;\n    //             } else {\n    //                 return;\n    //             }\n    //         case 'work-decrement,current:Work':\n    //             if (this.state.workLength > 1) {\n    //                 this.setState(state => ({\n    //                     workLength: state.workLength - 1,\n    //                     timeLeft: state.timeLeft - 60,\n    //                 }));\n    //                 return;\n    //             } else {\n    //                 return;\n    //             }\n    //         case 'work-increment,current:Work':\n    //             if (this.state.workLength < 60) {\n    //                 this.setState(state => ({\n    //                     workLength: state.workLength + 1,\n    //                     timeLeft: state.timeLeft + 60,\n    //                 }));\n    //                 return;\n    //             } else {\n    //                 return;\n    //             }\n    //         case 'work-decrement,current:Break':\n    //             if (this.state.workLength > 1) {\n    //                 this.setState(state => ({\n    //                     workLength: state.workLength - 1,\n    //                 }));\n    //                 return;\n    //             } else {\n    //                 return;\n    //             }\n    //         case 'work-increment,current:Break':\n    //             if (this.state.workLength < 60) {\n    //                 this.setState(state => ({\n    //                     workLength: state.workLength + 1,\n    //                 }));\n    //                 return;\n    //             } else {\n    //                 return;\n    //             }\n    //         default:\n    //             return;\n\n    //     }\n\n    // }\n\n    tick() {\n\n        // change color when time left <= 60\n        if (this.state.timeLeft <= 60) {\n            document.getElementById('time-left').style.color = \"#F8BFCE\";\n        } else {\n            document.getElementById('time-left').style.color = null;\n        }\n        if (this.state.timeLeft <= 0) {\n\n            clearInterval(this.intervalID);\n            const audio = document.getElementById('beep');\n            audio.play();\n            const newCurrentCounting = (this.state.currentCounting === 'Work') ? 'Break' : 'Work';\n            const newTimeLeft = (this.state.currentCounting === 'Work') ? this.state.breakLength * 60 : this.state.workLength * 60;\n\n            document.getElementById('time-left').style.color = null;\n            this.setState({\n                timeLeft: newTimeLeft,\n                currentCounting: newCurrentCounting,\n            });\n            this.intervalID = setInterval(() => { this.tick() }, 1000);\n\n            // update currentTask progress\n            if (this.props.currentTask && newCurrentCounting === 'Break') {\n                this.props.updateTaskProgress(this.props.currentTask.id);\n            }\n            return;\n        };\n\n\n\n        this.setState({\n            timeLeft: this.state.timeLeft - 1\n        });\n\n        document.getElementsByTagName('title')[0].text = `(${this.clockify(this.state.timeLeft)}) Pomodoro Clock`;\n\n    }\n\n    handleStartToggle() {\n        const audio = document.getElementById('beep');\n        audio.play();\n        audio.pause();\n        audio.currentTime = 0;\n        if (!this.state.counting) {\n            this.intervalID = setInterval(() => { this.tick() }, 1000);\n        } else {\n            clearInterval(this.intervalID);\n        }\n\n        this.setState(state => ({\n            counting: !this.state.counting,\n        }));\n\n    }\n\n    clockify(timeInSecs) {\n        let minutes = Math.floor(timeInSecs / 60);\n        let seconds = timeInSecs - 60 * minutes;\n        // insure mm:ss format at any time\n        seconds = (seconds < 10) ? '0' + seconds : seconds;\n        minutes = (minutes < 10) ? '0' + minutes : minutes;\n\n        return minutes + ':' + seconds\n    }\n\n    handleTimerFormSubmit(newBreakLength, newWorkLength) {\n        this.setState({\n            breakLength: parseInt(newBreakLength),\n            workLength: parseInt(newWorkLength),\n            timeLeft: parseInt(newWorkLength) * 60,\n            currentCounting: \"Work\"\n        });\n    }\n\n    render() {\n\n        const defaultBtnLists = ['Break', 'Work'].map((v) => (\n            <DefaultBtn\n                value={v}\n                key={`${v}-panel`}\n                currentCounting={this.state.currentCounting}\n                length={(v === 'Break') ? this.state.breakLength : this.state.workLength}\n                handleInDecrement={this.handleInDecrement}\n                handleDefaultBtn={this.handleDefaultBtn}\n                lang={this.props.lang}\n                LANG_MAP={this.props.LANG_MAP}\n            />\n        ));\n        return (\n            <div id='pomodoro-panel'>\n                <h1>{(this.props.lang === 'en') ? 'Pomodoro' : this.props.LANG_MAP['Pomodoro']}</h1>\n                <div id='panels-wrapper'>\n\n                    <DisplayPanel\n                        timeLeft={this.state.timeLeft}\n                        handleReset={this.handleReset}\n                        currentCounting={this.state.currentCounting}\n                        lang={this.props.lang}\n                        LANG_MAP={this.props.LANG_MAP}\n                        handleStartToggle={this.handleStartToggle}\n                        counting={this.state.counting}\n                        currentTask={this.props.currentTask}\n                        clockify={this.clockify}\n                        workLength={this.state.workLength}\n                        breakLength={this.state.breakLength}\n                    />\n                    <div id='defaultBtns-group' className='btn-group'>\n                        {defaultBtnLists}\n                        <TimerForm\n                            breakLength={this.state.breakLength}\n                            workLength={this.state.workLength}\n                            handleTimerFormSubmit={this.handleTimerFormSubmit}\n                            counting={this.state.counting}\n                        />\n                    </div>\n\n                </div>\n                <audio id=\"beep\" preload=\"auto\" src=\"https://raw.githubusercontent.com/tsunghao-huang/react-pomodoro/gh-pages/homeland.mp3\"></audio>\n            </div>\n\n        )\n    }\n}\n\nexport default Pomodoro;","import React, { useState, useRef, useEffect } from \"react\";\nimport usePrevious from \"./utils\";\n\nfunction Form(props) {\n    const [name, setName] = useState(\"\");\n    const [targetSessions, setTargetSessions] = useState(\"\");\n    const [isEditing, setIsEditing] = useState(false);\n    const wasEditing = usePrevious(isEditing);\n\n    const newTodoInputRef = useRef(null);\n    const toggleButtonRef = useRef(null);\n    const addTodoForm = useRef(null);\n\n    function handleChange(e) {\n        if (e.target.id === 'new-todo-input') {\n            setName(e.target.value);\n        } else if (e.target.id === 'new-todo-target-pomodoro') {\n            setTargetSessions(e.target.value);\n        }\n\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (name.replace(/\\s*/, \"\") === \"\") return;\n        props.addTask(name, targetSessions);\n        setName(\"\");\n        setTargetSessions(\"\");\n        const newTodoInput = document.getElementById('new-todo-input');\n        newTodoInput.focus();\n    }\n\n    const form = (\n        <form onSubmit={handleSubmit}>\n\n            <fieldset id=\"new-todo-fieldset\">\n                <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n                    {(props.lang === 'en') ? 'What needs to be done?'\n                        : props.LANG_MAP['What needs to be done?']}\n                </label>\n                <input\n                    type=\"text\"\n                    id=\"new-todo-input\"\n                    className=\"input input__lg\"\n                    name=\"text\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleChange}\n                    required={true}\n                    placeholder={`${(props.lang === 'en') ? 'Todo' : props.LANG_MAP['Todo']}`}\n                    ref={newTodoInputRef}\n                />\n                <label htmlFor=\"new-todo-target-pomodoro\" className=\"label__lg\">\n                    {`${(props.lang === 'en') ? 'Target Pomodoros' : props.LANG_MAP['Target Pomodoros']}`}\n                </label>\n                <input\n                    type=\"number\"\n                    id=\"new-todo-target-pomodoro\"\n                    className=\"input input__lg\"\n                    value={targetSessions}\n                    onChange={handleChange}\n                    min=\"0\"\n                    max=\"57\"\n                    placeholder={`${(props.lang === 'en') ? 'Pomodoros' : props.LANG_MAP['Pomodoros']}?`}\n                />\n            </fieldset>\n\n            <div id=\"form-btn-group\" className=\"todo-btn-group\">\n                <button type=\"button\" className=\"btn\" onClick={toggleForm}>\n                    <i className=\"fas fa-times\"></i>\n                    <span className=\"visually-hidden\">\n                        {(props.lang === 'en') ? 'Cancel' : props.LANG_MAP['Cancel']}\n                        adding new task\n                    </span>\n                </button>\n                <button type=\"submit\" className=\"btn\">\n                    <i className=\"fas fa-plus-circle\"></i>\n                    <span className=\"visually-hidden\">\n                        {(props.lang === 'en') ? 'Save' : props.LANG_MAP['Save']}\n                        new task\n                    </span>\n                </button>\n            </div>\n\n\n        </form>\n    )\n\n    const toggleBtn = (\n        <button\n            onClick={toggleForm}\n            id=\"add-todo-toggle-btn\"\n            className=\"btn\"\n            ref={toggleButtonRef}\n        >\n            <i className=\"fas fa-plus-circle\"></i>\n            {(props.lang === 'en') ? \" Add a task\" : props.LANG_MAP[\"Add a task\"]}\n        </button>\n    )\n\n    function toggleForm() {\n        setIsEditing(!isEditing);\n    }\n\n    useEffect(() => {\n        if (!wasEditing && isEditing) {\n            newTodoInputRef.current.focus();\n            addTodoForm.current.id = \"add-todo-form-edit\";\n        }\n        if (wasEditing && !isEditing) {\n            toggleButtonRef.current.focus();\n            addTodoForm.current.id = \"add-todo-form\";\n        }\n\n    }, [wasEditing, isEditing]);\n\n    return (\n        <div id=\"add-todo-form\" ref={addTodoForm}>\n\n            {isEditing ? form : toggleBtn}\n\n        </div>\n    );\n}\n\nexport default Form;","import React from \"react\";\n\nfunction FilterButton(props) {\n    return (\n        <button\n            type=\"button\"\n            className=\"btn toggle-btn\"\n            aria-pressed={props.isPressed}\n            onClick={() => props.setFilter(props.name)}\n        >\n            <span className=\"visually-hidden\">Show </span>\n            <span>{(props.lang === 'en') ? props.name : props.LANG_MAP[props.name]} </span>\n            <span className=\"visually-hidden\"> tasks</span>\n        </button>\n    );\n}\n\nexport default FilterButton;","import React, { useState, useRef, useEffect } from \"react\";\nimport usePrevious from \"./utils\";\n\nexport default function Todo(props) {\n\n    const editFieldRef = useRef(null);\n    const editButtonRef = useRef(null);\n\n    const [isEditing, setEditing] = useState(false);\n    const [newName, setNewName] = useState(props.name);\n    const [newTargetPomodoros, setNewTargetPomodoros] = useState(props.targetPomodoros);\n    const [newCompletedPomodoros, setNewCompletedPomodoros] = useState(props.completedPomodoros);\n    const wasEditing = usePrevious(isEditing);\n\n    function handleChange(e) {\n        e.stopPropagation();\n        if (e.target.id.includes('completed-pomodoros')) {\n            setNewCompletedPomodoros(e.target.value);\n        } else if (e.target.id.includes('target-pomodoros')) {\n            setNewTargetPomodoros(e.target.value);\n        } else {\n            setNewName(e.target.value);\n        }\n    }\n\n    function handleSubmit(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        if (newName.replace(/\\s*/, \"\") === \"\") return;\n        props.editTask(props.id, newName, newCompletedPomodoros, newTargetPomodoros);\n        setEditing(false);\n    }\n\n    function setEditingAndPreventBubbling(e, b) {\n        e.stopPropagation();\n        setEditing(b);\n    }\n\n    const editingTemplate = (\n        <form className=\"stack-small\">\n            <div className=\"form-group\">\n                <fieldset className=\"todo-fieldset\">\n                    <label className=\"todo-label\" htmlFor={props.id}>\n                        {(props.lang === 'en') ? `New name for ${props.name}` : `${props.name} 的新名字`}\n                    </label>\n                    <input\n                        id={props.id}\n                        className=\"input input__lg edit-todo-name\"\n                        type=\"text\"\n                        value={newName}\n                        onChange={handleChange}\n                        ref={editFieldRef}\n                        required={true}\n                    />\n                    <div className='edit-todo-pomodoros'>\n                        <label className=\"todo-label todo-label-pomodoros\" htmlFor={`${props.id}-completed-pomodoros`}>\n                            {(props.lang === 'en') ? 'Completed Pomodoros' : props.LANG_MAP['Completed Pomodoros']}\n                        </label>\n                        <input\n                            id={`${props.id}-completed-pomodoros`}\n                            className=\"input input__lg edit-todo-completed-pomodoros\"\n                            type=\"number\"\n                            value={newCompletedPomodoros}\n                            onChange={handleChange}\n                            min=\"0\"\n                            max={newTargetPomodoros}\n                            placeholder=\"Pomodoros?\"\n                        />\n                    </div>\n                    <div className='edit-todo-pomodoros'>\n                        <label className=\"todo-label todo-label-pomodoros\" htmlFor={`${props.id}-target-pomodoros`}>\n                            {(props.lang === 'en') ? 'Target Pomodoros' : props.LANG_MAP['Target Pomodoros']}\n                        </label>\n                        <input\n                            id={`${props.id}-target-pomodoros`}\n                            className=\"input input__lg edit-todo-target-pomodoros\"\n                            type=\"number\"\n                            value={newTargetPomodoros}\n                            onChange={handleChange}\n                            min={newCompletedPomodoros}\n                            max=\"57\"\n                            placeholder=\"Pomodoros?\"\n                        />\n                    </div>\n                </fieldset>\n\n            </div>\n            <div className=\"todo-btn-group\">\n                <button\n                    type=\"button\"\n                    className=\"btn todo-cancel\"\n                    onClick={(e) => setEditingAndPreventBubbling(e, false)}\n                >\n                    <i className=\"fas fa-times\" aria-hidden=\"true\"></i>\n                    <span className=\"visually-hidden\">\n                        {(props.lang === 'en') ? 'Cancel' : props.LANG_MAP['Cancel']}\n                        setting {props.name}\n                    </span>\n                </button>\n                <button\n                    type=\"submit\"\n                    className=\"btn btn__primary todo-edit\"\n                    onClick={(e) => handleSubmit(e)}\n                >\n                    <i className=\"far fa-save\" aria-hidden=\"true\"></i>\n\n                    <span className=\"visually-hidden\">\n                        {(props.lang === 'en') ? 'Save' : props.LANG_MAP['Save']}\n                        new settings for {props.name}\n                    </span>\n                </button>\n            </div>\n        </form>\n    );\n    const viewTemplate = (\n        <div className=\"stack-small\">\n            <div className=\"c-cb\">\n                <button\n                    type=\"button\"\n                    className=\"btn check-btn\"\n                    onClick={(e) => props.toggleTaskCompleted(e, props.id)}\n                    aria-label={`${props.completed ? \"uncheck\" : \"check\"} ${props.name}`}\n                    aria-live=\"polite\"\n                >\n                    <i className={`${props.completed ? \"fas fa-check-circle\" : \"far fa-circle\"}`} aria-hidden=\"true\"></i>\n                    <span className=\"visually-hidden\">\n                        {(props.lang === 'en') ? 'Edit' : props.LANG_MAP['Edit']}\n                        {props.name}\n                    </span>\n                </button>\n                <div className={`todo-label ${props.completed ? \"todo-label-checked\" : \"\"}`} htmlFor={props.id}>\n                    <span className=\"todo-label-name\">{props.name}</span>\n                    <span className=\"todo-label-progress\">{(props.targetPomodoros === 0 | props.targetPomodoros === \"\") ? '' : `${(props.lang === 'en') ? 'Progress' : props.LANG_MAP['Progress']}: ${props.completedPomodoros ? props.completedPomodoros : 0}/${props.targetPomodoros}`}</span>\n                </div>\n            </div>\n            <div className=\"todo-btn-group\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn__danger\"\n                    onClick={(e) => props.deleteTask(e, props.id)}\n                >\n                    <i className=\"fas fa-trash-alt\" aria-hidden=\"true\"></i>\n                    <span className=\"visually-hidden\">\n                        {(props.lang === 'en') ? 'Delete' : props.LANG_MAP['Delete']}\n                        {props.name}\n                    </span>\n                </button>\n                <button\n                    type=\"button\"\n                    className=\"btn\"\n                    onClick={(e) => setEditingAndPreventBubbling(e, true)}\n                    ref={editButtonRef}\n                >\n                    <i className=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i>\n                    <span className=\"visually-hidden\">\n                        {(props.lang === 'en') ? 'Edit' : props.LANG_MAP['Edit']}\n                        {props.name}\n                    </span>\n                </button>\n            </div>\n        </div>\n    );\n\n    useEffect(() => {\n        if (!wasEditing && isEditing) {\n            editFieldRef.current.select();\n            editFieldRef.current.focus();\n            // initiated value for the input field\n            setNewName(props.name);\n            setNewCompletedPomodoros(props.completedPomodoros);\n            setNewTargetPomodoros(props.targetPomodoros);\n        }\n        if (wasEditing && !isEditing) {\n            editButtonRef.current.focus();\n        }\n\n    }, [wasEditing, isEditing, props.name, props.completedPomodoros, props.targetPomodoros]);\n\n    return (\n        <li\n            id={`li-${props.id}`}\n            className={`todo stack-small ${props.current ? \"todo-selected\" : \"\"}`}\n            onClick={() => props.updateCurrentTask(props.id)}\n        >\n            {isEditing ? editingTemplate : viewTemplate}\n        </li>\n    );\n}","import React, { useState, useRef, useEffect } from 'react';\nimport \"./TodoApp.css\";\nimport Form from \"./TodoApp-sub/Form\";\nimport FilterButton from \"./TodoApp-sub/FilterButton\";\nimport Todo from \"./TodoApp-sub/Todo\";\nimport { nanoid } from \"nanoid\";\nimport usePrevious from \"./TodoApp-sub/utils\";\n\nconst FILTER_MAP = {\n    Active: task => !task.completed,\n    Completed: task => task.completed,\n    All: () => true\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nexport default function TodoApp(props) {\n\n    // const localStorageKey = 'localTodo';\n    // if (localStorage.getItem(localStorageKey) === null) {\n    //     localStorage.setItem(localStorageKey, JSON.stringify(props.tasks));\n    // }\n    // const localTodo = JSON.parse(localStorage.getItem(localStorageKey));\n    // const [tasks, setTasks] = useState(localTodo);\n\n\n    // function updateLocalStorage(updatedTodos) {\n    //     localStorage.setItem(localStorageKey, JSON.stringify(updatedTodos));\n    //     return;\n    // }\n    // const [tasks, setTasks] = useState(props.tasks);\n    const tasks = props.tasks;\n\n    const [filter, setFilter] = useState('All');\n\n    function addTask(name, targetPomodoros) {\n        const sanitizedName = name.replace(/(^\\s*)|(\\s*$)/g, \"\");\n        const newTask = {\n            id: \"todo-\" + nanoid(),\n            name: sanitizedName,\n            completed: false,\n            completedPomodoros: 0,\n            targetPomodoros: (targetPomodoros === \"\") ? 0 : parseInt(targetPomodoros)\n        };\n        props.setTasks([...tasks, newTask]);\n    }\n\n    function toggleTaskCompleted(e, id) {\n        e.stopPropagation();\n        const updatedTasks = tasks\n            .map(task => {\n                // if this task has the same ID as the edited task\n                if (id === task.id) {\n                    // use object spread to make a new obj\n                    // whose `completed` prop has been inverted\n                    return { ...task, completed: !task.completed }\n                }\n                return task;\n            })\n            .map(task => { // update completedPomodoros with toggle\n                if (task.completed) {\n                    return { ...task, completedPomodoros: parseInt(task.targetPomodoros) };\n                } else if (task.completedPomodoros === task.targetPomodoros) {\n                    // task not completed but have the same completed & target pomodoros\n                    // reset completedPomodoros to 0;\n                    return { ...task, completedPomodoros: 0 };\n                }\n                return task;\n            })\n        props.setTasks(updatedTasks);\n    }\n\n    function updateCurrentTask(id) {\n        const updatedTasks = tasks.map((task) => {\n            if (id === task.id) {\n                return { ...task, current: true };\n            } else {\n                return { ...task, current: false };\n            }\n        })\n        props.setTasks(updatedTasks);\n    }\n\n    function deleteTask(e, id) {\n        e.stopPropagation();\n        const remainingTasks = tasks.filter(task => id !== task.id);\n        props.setTasks(remainingTasks);\n    }\n\n    function editTask(id, newName, newCompletedPomodoros, newTargetPomodoros) {\n        const sanitizedNewName = newName.replace(/(^\\s*)|(\\s*$)/g, \"\");\n        const editedTaskList = tasks\n            .map(task => {\n                // if this task has the same ID as the edited task\n                if (id === task.id) {\n                    //\n                    return {\n                        ...task,\n                        ...{\n                            name: sanitizedNewName,\n                            completedPomodoros: (newCompletedPomodoros === \"\") ? 0 : parseInt(newCompletedPomodoros),\n                            targetPomodoros: (newTargetPomodoros === \"\") ? 0 : parseInt(newTargetPomodoros)\n                        }\n                    };\n                }\n                return task;\n            })\n            .map(task => { // validate target & completed pomodoros\n                if ((task.targetPomodoros !== 0) && (task.targetPomodoros === task.completedPomodoros)) {\n                    return { ...task, completed: true }\n                } else if ((task.targetPomodoros !== 0) && (task.targetPomodoros !== task.completedPomodoros)) {\n                    return { ...task, completed: false }\n                } else {\n                    return task;\n                }\n            })\n\n        props.setTasks(editedTaskList);\n    }\n\n    const taskList = tasks\n        .filter(FILTER_MAP[filter])\n        .map(task => (\n            <Todo\n                id={task.id}\n                name={task.name}\n                completed={task.completed}\n                key={task.id}\n                toggleTaskCompleted={toggleTaskCompleted}\n                deleteTask={deleteTask}\n                editTask={editTask}\n                lang={props.lang}\n                LANG_MAP={props.LANG_MAP}\n                completedPomodoros={task.completedPomodoros}\n                targetPomodoros={task.targetPomodoros}\n                updateCurrentTask={updateCurrentTask}\n                current={task.current}\n            />\n        ));\n\n    const filterList = FILTER_NAMES.map(name => (\n        <FilterButton\n            key={name}\n            name={name}\n            isPressed={name === filter}\n            setFilter={setFilter}\n            lang={props.lang}\n            LANG_MAP={props.LANG_MAP}\n        />\n    ));\n\n    const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n    let headingText;\n\n    if (props.lang === 'en') {\n        switch (filter) {\n            case 'All':\n                headingText = `${taskList.length} ${tasksNoun} in total`;\n                break;\n            default:\n                headingText = `${taskList.length} ${tasksNoun} ${filter.toLowerCase()}`;\n        }\n\n    } else {\n        headingText = `${props.LANG_MAP[filter]} ${taskList.length} 件事`;\n    }\n\n    const listHeadingRef = useRef(null);\n    const prevTaskLength = usePrevious(tasks.length);\n\n    useEffect(() => {\n        if (tasks.length - prevTaskLength === -1) {\n            listHeadingRef.current.focus();\n        }\n    }, [tasks.length, prevTaskLength]);\n\n    return (\n        <div id=\"todoapp\" className=\"stack-large\">\n            <h1>{(props.lang === 'en') ? 'Todos' : props.LANG_MAP['Todos']}</h1>\n            <Form addTask={addTask} lang={props.lang} LANG_MAP={props.LANG_MAP} />\n            <div className=\"filters btn-group stack-exception\">\n                {filterList}\n            </div>\n            <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n                {headingText}\n            </h2>\n            <ul\n                role=\"list\"\n                className=\"todo-list stack-large stack-exception\"\n                aria-labelledby=\"list-heading\"\n            >\n                {taskList}\n\n            </ul>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Pomodoro from './components/Pomodoro';\nimport TodoApp from './components/TodoApp';\n\nconst DATA = [\n    { id: \"todo-0\", name: \"Eat\", completed: false, completedPomodoros: 1, targetPomodoros: 2, current: true },\n    { id: \"todo-1\", name: \"Sleep\", completed: false, completedPomodoros: 0, targetPomodoros: 0, current: false },\n    { id: \"todo-2\", name: \"Repeat\", completed: false, completedPomodoros: 0, targetPomodoros: 0, current: false }\n];\n\nconst LANG_MAP = {\n    'Pomodoro': '蕃 茄 鐘',\n    Work: '工 作',\n    Break: '休 息',\n    Todos: '待辦事項',\n    Todo: '待辦事項',\n    'What needs to be done?': '有事嗎？',\n    Add: '新增',\n    All: '全部',\n    Active: '待辦',\n    Completed: '完成',\n    Edit: '編輯',\n    Delete: '刪除',\n    Check: '標記完成',\n    Cancel: '取消',\n    Save: '儲存',\n    Progress: '進度',\n    'Target Pomodoros': '目標番茄數',\n    'Completed Pomodoros': '完成番茄數',\n    'Pomodoros': '番茄數',\n    'Add a task': ' 做點事吧'\n};\n\nfunction App() {\n\n    const localStorageKey = 'localTodo';\n    if (localStorage.getItem(localStorageKey) === null) {\n        localStorage.setItem(localStorageKey, JSON.stringify(DATA));\n    }\n    const localTodo = JSON.parse(localStorage.getItem(localStorageKey));\n\n    const [tasks, setTasks] = useState(localTodo);\n    const [lang, setLang] = useState('en');\n    const [currentTask, setCurrentTask] = useState(tasks.filter(t => t.current)[0]);\n\n    function updateLocalStorage(updatedTodos) {\n        localStorage.setItem(localStorageKey, JSON.stringify(updatedTodos));\n        return;\n    }\n\n    useEffect(() => {\n        updateLocalStorage(tasks);\n        setCurrentTask(tasks.filter(t => t.current)[0]);\n    }, [tasks]);\n\n    useEffect(() => {\n        document.documentElement.setAttribute('lang', lang);\n    }, [lang]);\n\n    function handleLanguage() {\n        (lang === 'en') ? setLang('zh-TW') : setLang('en');\n    }\n\n    function updateTaskProgress(id) {\n        const newTaskList = tasks\n            .map(task => {\n                // if this task has the same ID as the edited task\n                if (id === task.id && task.completedPomodoros !== task.targetPomodoros) {\n                    return {\n                        ...task,\n                        ...{\n                            completedPomodoros: task.completedPomodoros + 1\n                        }\n                    };\n                }\n                return task;\n            })\n            .map(task => {\n                // validate target & completed sessions\n                if ((task.targetPomodoros !== 0) && (task.targetPomodoros === task.completedPomodoros)) {\n                    return { ...task, completed: true }\n                } else if ((task.targetPomodoros !== 0) && (task.targetPomodoros !== task.completedPomodoros)) {\n                    return { ...task, completed: false }\n                } else {\n                    return task;\n                }\n            })\n        setTasks(newTaskList);\n    }\n\n    return (\n        <div id=\"App\">\n            <button\n                aria-label={`switch language to ${(lang === 'en') ? 'Mandarin' : 'English'}`}\n                id='language-btn'\n                onClick={handleLanguage}\n                aria-live=\"polite\"\n            >\n                {(lang === 'en') ? '繁體中文' : 'English'}\n            </button>\n            <Pomodoro\n                lang={lang}\n                LANG_MAP={LANG_MAP}\n                currentTask={currentTask}\n                updateTaskProgress={updateTaskProgress}\n            />\n            <TodoApp\n                tasks={tasks}\n                lang={lang}\n                LANG_MAP={LANG_MAP}\n                setTasks={setTasks}\n            />\n        </div>\n\n    )\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}