{"version":3,"sources":["index.js"],"names":["mandarinLabel","Session","Break","ControlPanel","id","this","props","value","toLowerCase","className","aria-label","onClick","handleDefaultBtn","english","handleInDecrement","aria-hidden","aria-live","length","React","Component","DisplayPanel","currentCounting","role","timeLeft","handleStartToggle","handleReset","App","state","breakLength","sessionLength","counting","bind","clockify","tick","handleLanguage","setState","document","documentElement","setAttribute","clearInterval","intervalID","audio","getElementById","pause","currentTime","style","color","getElementsByTagName","text","e","target","includes","currentTarget","play","newCurrentCounting","newTimeLeft","setInterval","timeInSecs","minutes","Math","floor","seconds","preload","src","ReactDOM","render"],"mappings":"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","file":"static/js/main.f8d3eb9c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst mandarinLabel = {\n    Session: '工 作',\n    Break: '休 息'\n}\n\n\nclass ControlPanel extends React.Component {\n    render() {\n        return (\n            <div id={`${this.props.value.toLowerCase()}-panel`} className='control-panel'>\n                <button\n                    aria-label={`set ${this.props.value.toLowerCase()} to default duration.`}\n                    id={`default-${this.props.value.toLowerCase()}`}\n                    onClick={this.props.handleDefaultBtn}\n                >\n                    {(this.props.english) ? this.props.value : mandarinLabel[this.props.value]}\n                </button>\n                {/* <p id={`${this.props.value.toLowerCase()}-label`}>{(this.props.english) ? `Custom ${this.props.value}` : `自 訂 ${mandarinLabel[this.props.value]}`}</p> */}\n\n                <div>\n                    <button\n                        aria-label={`decrement ${this.props.value.toLowerCase()} duration by 1 minute.`}\n                        id={`${this.props.value.toLowerCase()}-decrement`}\n                        onClick={this.props.handleInDecrement}\n                        className='btn-level'\n                    >\n                        <i className=\"fa fa-arrow-down fa-2x\" aria-hidden=\"true\"></i>\n                    </button>\n\n                    <p aria-label={`Custom ${this.props.value}`} aria-live='assertive' id={`${this.props.value.toLowerCase()}-length`} className='btn-level'>{this.props.length}</p>\n\n                    <button\n                        aria-label={`increment ${this.props.value.toLowerCase()} duration by 1 minute.`}\n                        id={`${this.props.value.toLowerCase()}-increment`}\n                        onClick={this.props.handleInDecrement}\n                        className='btn-level'\n                    >\n                        <i className=\"fa fa-arrow-up fa-2x\" aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n\n\n            </div>\n\n        )\n    }\n}\n\nfunction DisplayPanel(props) {\n    return (\n        <div id='display-panel' aria-label=\"display panel\">\n            <p id='timer-label' aria-label={`Currently counting for ${props.currentCounting}`}>{(props.english) ? props.currentCounting : mandarinLabel[props.currentCounting]}</p>\n            <p id='time-left' role='timer' aria-label={`Duration for ${props.currentCounting}`}>{props.timeLeft}</p>\n\n            <div>\n                <button aria-label={`start ${props.currentCounting}`} id=\"start_stop\" onClick={props.handleStartToggle} className='btn-level'>\n                    <i className=\"fa fa-play fa-3x\"></i>\n                    <i className=\"fa fa-pause fa-3x\"></i>\n                </button>\n                <button aria-label={`reset to session, 25 minutes.`} id=\"reset\" onClick={props.handleReset} className='btn-level'>\n                    <i className=\"fa fa-refresh fa-3x\"></i>\n                </button>\n            </div>\n\n        </div>\n    )\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            breakLength: 5,\n            sessionLength: 25,\n            timeLeft: 1500,\n            counting: false,\n            currentCounting: 'Session',\n            english: true\n        };\n        this.handleReset = this.handleReset.bind(this);\n        this.clockify = this.clockify.bind(this);\n        this.handleStartToggle = this.handleStartToggle.bind(this);\n        this.tick = this.tick.bind(this);\n        this.handleInDecrement = this.handleInDecrement.bind(this);\n        this.handleDefaultBtn = this.handleDefaultBtn.bind(this);\n        this.handleLanguage = this.handleLanguage.bind(this);\n    }\n\n    handleLanguage() {\n        this.setState({\n            english: !this.state.english\n        });\n        if (this.state.english) {\n            document.documentElement.setAttribute('lang', 'zh-TW');\n        } else {\n            document.documentElement.setAttribute('lang', 'en');\n        }\n    }\n\n    handleReset() {\n        this.setState({\n            breakLength: 5,\n            sessionLength: 25,\n            timeLeft: 1500,\n            counting: false,\n            currentCounting: 'Session',\n        });\n        // reset should stop the timer as well\n        clearInterval(this.intervalID);\n\n        // and the audio\n        const audio = document.getElementById('beep');\n        audio.pause();\n        audio.currentTime = 0;\n\n        // and set the color back to default, if it is changed\n        document.getElementById('time-left').style.color = null;\n\n        // and the title\n        document.getElementsByTagName('title')[0].text = 'Promodoro Clock';\n    }\n\n    handleDefaultBtn(e) {\n        // ignore click, while the clock is counting\n        if (this.state.counting) return;\n        // console.log(e.target.id);\n        if (e.target.id.includes('session')) {\n            this.setState({\n                sessionLength: 25,\n                timeLeft: 1500,\n                counting: false,\n                currentCounting: 'Session',\n            });\n        } else {\n            this.setState({\n                breakLength: 5,\n                timeLeft: 300,\n                counting: false,\n                currentCounting: 'Break',\n            });\n        }\n    }\n\n    handleInDecrement(e) {\n        // in case the clock is still running, disable handleInDecrement()\n        if (this.state.counting) return;\n        switch (`${e.currentTarget.id},current:${this.state.currentCounting}`) {\n            case 'break-decrement,current:Session':\n                if (this.state.breakLength > 1) {\n                    this.setState(state => ({\n                        breakLength: state.breakLength - 1,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'break-increment,current:Session':\n                if (this.state.breakLength < 60) {\n                    this.setState(state => ({\n                        breakLength: state.breakLength + 1\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'break-decrement,current:Break':\n                if (this.state.breakLength > 1) {\n                    this.setState(state => ({\n                        breakLength: state.breakLength - 1,\n                        timeLeft: state.timeLeft - 60,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'break-increment,current:Break':\n                if (this.state.breakLength < 60) {\n                    this.setState(state => ({\n                        breakLength: state.breakLength + 1,\n                        timeLeft: state.timeLeft + 60,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'session-decrement,current:Session':\n                if (this.state.sessionLength > 1) {\n                    this.setState(state => ({\n                        sessionLength: state.sessionLength - 1,\n                        timeLeft: state.timeLeft - 60,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'session-increment,current:Session':\n                if (this.state.sessionLength < 60) {\n                    this.setState(state => ({\n                        sessionLength: state.sessionLength + 1,\n                        timeLeft: state.timeLeft + 60,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'session-decrement,current:Break':\n                if (this.state.sessionLength > 1) {\n                    this.setState(state => ({\n                        sessionLength: state.sessionLength - 1,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'session-increment,current:Break':\n                if (this.state.sessionLength < 60) {\n                    this.setState(state => ({\n                        sessionLength: state.sessionLength + 1,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            default:\n                return;\n\n        }\n\n    }\n\n    tick() {\n\n        // change color when time left <= 60\n        if (this.state.timeLeft <= 60) {\n            document.getElementById('time-left').style.color = \"#F8BFCE\";\n        } else {\n            document.getElementById('time-left').style.color = null;\n        }\n        if (this.state.timeLeft <= 0) {\n\n            clearInterval(this.intervalID);\n            const audio = document.getElementById('beep');\n            audio.play();\n            const newCurrentCounting = (this.state.currentCounting === 'Session') ? 'Break' : 'Session';\n            const newTimeLeft = (this.state.currentCounting === 'Session') ? this.state.breakLength * 60 : this.state.sessionLength * 60;\n\n            document.getElementById('time-left').style.color = null;\n            this.setState({\n                timeLeft: newTimeLeft,\n                currentCounting: newCurrentCounting,\n            });\n            this.intervalID = setInterval(() => { this.tick() }, 1000);\n            return;\n        };\n\n\n\n        this.setState({\n            timeLeft: this.state.timeLeft - 1\n        });\n\n        document.getElementsByTagName('title')[0].text = `(${this.clockify(this.state.timeLeft)}) Promodoro Clock`;\n\n    }\n\n    handleStartToggle() {\n        if (!this.state.counting) {\n            this.intervalID = setInterval(() => { this.tick() }, 1000);\n        } else {\n            clearInterval(this.intervalID);\n        }\n\n        this.setState(state => ({\n            counting: !this.state.counting,\n        }));\n\n    }\n\n    clockify(timeInSecs) {\n        let minutes = Math.floor(timeInSecs / 60);\n        let seconds = timeInSecs - 60 * minutes;\n        // insure mm:ss format at any time\n        seconds = (seconds < 10) ? '0' + seconds : seconds;\n        minutes = (minutes < 10) ? '0' + minutes : minutes;\n\n        return minutes + ':' + seconds\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>{(this.state.english) ? 'Promodoro Clock' : '蕃 茄 鐘'}</h1>\n                <button aria-label={`switch language to ${this.state.english ? 'Mandarin' : 'English'}`} id='language-btn' onClick={this.handleLanguage}>{(this.state.english) ? '繁體中文' : 'English'}</button>\n                <DisplayPanel timeLeft={this.clockify(this.state.timeLeft)} handleReset={this.handleReset}\n                    handleStartToggle={this.handleStartToggle} currentCounting={this.state.currentCounting} english={this.state.english} />\n                <div id='control-panels-group'>\n                    <ControlPanel value={'Break'} currentCounting={this.state.currentCounting} length={this.state.breakLength} handleInDecrement={this.handleInDecrement} handleDefaultBtn={this.handleDefaultBtn} english={this.state.english} />\n                    <ControlPanel value={'Session'} currentCounting={this.state.currentCounting} length={this.state.sessionLength} handleInDecrement={this.handleInDecrement} handleDefaultBtn={this.handleDefaultBtn} english={this.state.english} />\n                </div>\n\n                <audio id=\"beep\" preload=\"auto\" src=\"https://raw.githubusercontent.com/tsunghao-huang/react-pomodoro/gh-pages/homeland.mp3\"></audio>\n            </div>\n\n        )\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}