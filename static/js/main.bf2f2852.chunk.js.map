{"version":3,"sources":["index.js"],"names":["mandarinLabel","Session","Break","ControlPanel","id","this","props","value","toLowerCase","className","onClick","handleDefaultBtn","english","handleInDecrement","aria-hidden","length","React","Component","DisplayPanel","currentCounting","timeLeft","handleStartToggle","handleReset","App","state","breakLength","sessionLength","counting","bind","clockify","tick","handleLanguage","setState","clearInterval","intervalID","audio","document","getElementById","pause","currentTime","style","color","getElementsByTagName","text","e","target","includes","currentTarget","play","newCurrentCounting","newTimeLeft","setInterval","timeInSecs","minutes","Math","floor","seconds","preload","src","ReactDOM","render"],"mappings":"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","file":"static/js/main.bf2f2852.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst mandarinLabel = {\n    Session: '工 作',\n    Break: '休 息'\n}\n\n\nclass ControlPanel extends React.Component {\n    render() {\n        return (\n            <div id={`${this.props.value.toLowerCase()}-panel`} className='control-panel'>\n                <button id={`default-${this.props.value.toLowerCase()}`} onClick={this.props.handleDefaultBtn}>{(this.props.english) ? this.props.value : mandarinLabel[this.props.value]}</button>\n                <h2 id={`${this.props.value.toLowerCase()}-label`}>{(this.props.english) ? `Custom ${this.props.value}` : `自 訂 ${mandarinLabel[this.props.value]}`}</h2>\n                <button id={`${this.props.value.toLowerCase()}-decrement`} onClick={this.props.handleInDecrement} className='btn-level'>\n                    <i className=\"fa fa-arrow-down fa-2x\" aria-hidden=\"true\"></i>\n                </button>\n\n                <p id={`${this.props.value.toLowerCase()}-length`} className='btn-level'>{this.props.length}</p>\n\n                <button id={`${this.props.value.toLowerCase()}-increment`} onClick={this.props.handleInDecrement} className='btn-level'>\n                    <i className=\"fa fa-arrow-up fa-2x\" aria-hidden=\"true\"></i>\n                </button>\n\n            </div>\n\n        )\n    }\n}\n\nfunction DisplayPanel(props) {\n    return (\n        <div id='display-panel'>\n            <h2 id='timer-label'>{(props.english) ? props.currentCounting : mandarinLabel[props.currentCounting]}</h2>\n            <p id='time-left'>{props.timeLeft}</p>\n\n            <div>\n                <button id=\"start_stop\" onClick={props.handleStartToggle} className='btn-level'>\n                    <i className=\"fa fa-play fa-3x\"></i>\n                    <i className=\"fa fa-pause fa-3x\"></i>\n                </button>\n                <button id=\"reset\" onClick={props.handleReset} className='btn-level'>\n                    <i className=\"fa fa-refresh fa-3x\"></i>\n                </button>\n            </div>\n\n        </div>\n    )\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            breakLength: 5,\n            sessionLength: 25,\n            timeLeft: 1500,\n            counting: false,\n            currentCounting: 'Session',\n            english: true\n        };\n        this.handleReset = this.handleReset.bind(this);\n        this.clockify = this.clockify.bind(this);\n        this.handleStartToggle = this.handleStartToggle.bind(this);\n        this.tick = this.tick.bind(this);\n        this.handleInDecrement = this.handleInDecrement.bind(this);\n        this.handleDefaultBtn = this.handleDefaultBtn.bind(this);\n        this.handleLanguage = this.handleLanguage.bind(this);\n    }\n\n    handleLanguage () {\n        this.setState({\n            english: !this.state.english\n        });\n    }\n\n    handleReset() {\n        this.setState({\n            breakLength: 5,\n            sessionLength: 25,\n            timeLeft: 1500,\n            counting: false,\n            currentCounting: 'Session',\n        });\n        // reset should stop the timer as well\n        clearInterval(this.intervalID);\n\n        // and the audio\n        const audio = document.getElementById('beep');\n        audio.pause();\n        audio.currentTime = 0;\n\n        // and set the color back to default, if it is changed\n        document.getElementById('time-left').style.color = null;\n\n        // and the title\n        document.getElementsByTagName('title')[0].text = 'Promodoro Clock';\n    }\n\n    handleDefaultBtn(e) {\n        // ignore click, while the clock is counting\n        if (this.state.counting) return;\n        // console.log(e.target.id);\n        if (e.target.id.includes('session')) {\n            this.setState({\n                sessionLength: 25,\n                timeLeft: 1500,\n                counting: false,\n                currentCounting: 'Session',\n            });\n        } else {\n            this.setState({\n                breakLength: 5,\n                timeLeft: 300,\n                counting: false,\n                currentCounting: 'Break',\n            });\n        }\n    }\n\n    handleInDecrement(e) {\n        // in case the clock is still running, disable handleInDecrement()\n        if (this.state.counting) return;\n        switch (`${e.currentTarget.id},current:${this.state.currentCounting}`) {\n            case 'break-decrement,current:Session':\n                if (this.state.breakLength > 1) {\n                    this.setState(state => ({\n                        breakLength: state.breakLength - 1,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'break-increment,current:Session':\n                if (this.state.breakLength < 60) {\n                    this.setState(state => ({\n                        breakLength: state.breakLength + 1\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'break-decrement,current:Break':\n                if (this.state.breakLength > 1) {\n                    this.setState(state => ({\n                        breakLength: state.breakLength - 1,\n                        timeLeft: state.timeLeft - 60,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'break-increment,current:Break':\n                if (this.state.breakLength < 60) {\n                    this.setState(state => ({\n                        breakLength: state.breakLength + 1,\n                        timeLeft: state.timeLeft + 60,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'session-decrement,current:Session':\n                if (this.state.sessionLength > 1) {\n                    this.setState(state => ({\n                        sessionLength: state.sessionLength - 1,\n                        timeLeft: state.timeLeft - 60,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'session-increment,current:Session':\n                if (this.state.sessionLength < 60) {\n                    this.setState(state => ({\n                        sessionLength: state.sessionLength + 1,\n                        timeLeft: state.timeLeft + 60,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'session-decrement,current:Break':\n                if (this.state.sessionLength > 1) {\n                    this.setState(state => ({\n                        sessionLength: state.sessionLength - 1,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'session-increment,current:Break':\n                if (this.state.sessionLength < 60) {\n                    this.setState(state => ({\n                        sessionLength: state.sessionLength + 1,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            default:\n                return;\n\n        }\n\n    }\n\n    tick() {\n\n        // change color when time left <= 60\n        if (this.state.timeLeft <= 60) {\n            document.getElementById('time-left').style.color = \"rgb(175, 81, 78)\";\n        } else {\n            document.getElementById('time-left').style.color = null;\n        }\n        if (this.state.timeLeft <= 0) {\n\n            clearInterval(this.intervalID);\n            const audio = document.getElementById('beep');\n            audio.play();\n            const newCurrentCounting = (this.state.currentCounting === 'Session') ? 'Break' : 'Session';\n            const newTimeLeft = (this.state.currentCounting === 'Session') ? this.state.breakLength * 60 : this.state.sessionLength * 60;\n\n            document.getElementById('time-left').style.color = null;\n            this.setState({\n                timeLeft: newTimeLeft,\n                currentCounting: newCurrentCounting,\n            });\n            this.intervalID = setInterval(() => { this.tick() }, 1000);\n            return;\n        };\n\n\n\n        this.setState({\n            timeLeft: this.state.timeLeft - 1\n        });\n\n        document.getElementsByTagName('title')[0].text = `(${this.clockify(this.state.timeLeft)}) Promodoro Clock`;\n\n    }\n\n    handleStartToggle() {\n        if (!this.state.counting) {\n            this.intervalID = setInterval(() => { this.tick() }, 1000);\n        } else {\n            clearInterval(this.intervalID);\n        }\n\n        this.setState(state => ({\n            counting: !this.state.counting,\n        }));\n\n    }\n\n    clockify(timeInSecs) {\n        let minutes = Math.floor(timeInSecs / 60);\n        let seconds = timeInSecs - 60 * minutes;\n        // insure mm:ss format at any time\n        seconds = (seconds < 10) ? '0' + seconds : seconds;\n        minutes = (minutes < 10) ? '0' + minutes : minutes;\n\n        return minutes + ':' + seconds\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>{(this.state.english) ? 'Promodoro Clock' : '蕃 茄 鐘'}</h1>\n                <button id='language-btn' onClick={this.handleLanguage}>{(this.state.english) ? '繁體中文' : 'English'}</button>\n                <DisplayPanel timeLeft={this.clockify(this.state.timeLeft)} handleReset={this.handleReset}\n                    handleStartToggle={this.handleStartToggle} currentCounting={this.state.currentCounting} english={this.state.english} />\n                <div id='control-panels-group'>\n                    <ControlPanel value={'Break'} length={this.state.breakLength} handleInDecrement={this.handleInDecrement} handleDefaultBtn={this.handleDefaultBtn} english={this.state.english} />\n                    <ControlPanel value={'Session'} length={this.state.sessionLength} handleInDecrement={this.handleInDecrement} handleDefaultBtn={this.handleDefaultBtn} english={this.state.english} />\n                </div>\n\n                <audio id=\"beep\" preload=\"auto\" src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"></audio>\n            </div>\n\n        )\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}