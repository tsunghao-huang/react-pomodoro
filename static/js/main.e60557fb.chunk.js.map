{"version":3,"sources":["components/Pomodoro-sub/ControlPanel.js","components/Pomodoro-sub/DisplayPanel.js","components/Pomodoro.js","components/TodoApp-sub/Form.js","components/TodoApp-sub/FilterButton.js","components/TodoApp-sub/utils.js","components/TodoApp-sub/Todo.js","components/TodoApp.js","index.js"],"names":["ControlPanel","id","this","props","value","toLowerCase","className","aria-label","onClick","handleDefaultBtn","lang","LANG_MAP","handleInDecrement","aria-hidden","aria-live","length","React","Component","DisplayPanel","currentCounting","role","timeLeft","handleStartToggle","handleReset","Pomodoro","state","breakLength","sessionLength","counting","english","bind","clockify","tick","handleLanguage","setState","document","documentElement","setAttribute","clearInterval","intervalID","audio","getElementById","pause","currentTime","style","color","getElementsByTagName","text","e","target","includes","currentTarget","play","newCurrentCounting","newTimeLeft","setInterval","timeInSecs","minutes","Math","floor","seconds","controlPanelList","map","v","key","preload","src","Form","useState","name","setName","onSubmit","preventDefault","addTask","htmlFor","type","autoComplete","onChange","FilterButton","aria-pressed","isPressed","setFilter","usePrevious","ref","useRef","useEffect","current","Todo","editFieldRef","editButtonRef","isEditing","setEditing","newName","setNewName","wasEditing","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","select","focus","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","TodoApp","localStorage","getItem","setItem","JSON","stringify","tasks","localTodo","parse","setTasks","filter","updateLocalStorage","updatedTodos","updatedTasks","remainingTasks","editedTaskList","headingText","taskList","filterList","tasksNoun","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","aria-labelledby","DATA","Session","Break","Todos","Add","Edit","Delete","Cancel","Save","App","setLang","ReactDOM","render"],"mappings":"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","file":"static/js/main.e60557fb.chunk.js","sourcesContent":["import React from 'react';\n\nclass ControlPanel extends React.Component {\n    render() {\n        return (\n            <div id={`${this.props.value.toLowerCase()}-panel`} className='control-panel'>\n                <button\n                    aria-label={`set ${this.props.value.toLowerCase()} to default duration.`}\n                    id={`default-${this.props.value.toLowerCase()}`}\n                    onClick={this.props.handleDefaultBtn}\n                >\n                    {(this.props.lang === 'en') ? this.props.value : this.props.LANG_MAP[this.props.value]}\n                </button>\n\n                <div>\n                    <button\n                        aria-label={`decrement ${this.props.value.toLowerCase()} duration by 1 minute.`}\n                        id={`${this.props.value.toLowerCase()}-decrement`}\n                        onClick={this.props.handleInDecrement}\n                        className='btn-level'\n                    >\n                        <i className=\"fa fa-arrow-down fa-2x\" aria-hidden=\"true\"></i>\n                    </button>\n\n                    <p aria-label={`Custom ${this.props.value}`} aria-live='assertive' id={`${this.props.value.toLowerCase()}-length`} className='btn-level'>{this.props.length}</p>\n\n                    <button\n                        aria-label={`increment ${this.props.value.toLowerCase()} duration by 1 minute.`}\n                        id={`${this.props.value.toLowerCase()}-increment`}\n                        onClick={this.props.handleInDecrement}\n                        className='btn-level'\n                    >\n                        <i className=\"fa fa-arrow-up fa-2x\" aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default ControlPanel;","import React from 'react';\n\nexport default function DisplayPanel(props) {\n    return (\n        <div id='display-panel' aria-label=\"display panel\">\n            <p id='timer-label' aria-label={`Currently counting for ${props.currentCounting}`}>{(props.lang === 'en') ? props.currentCounting : props.LANG_MAP[props.currentCounting]}</p>\n            <p id='time-left' role='timer' aria-label={`Duration for ${props.currentCounting}`}>{props.timeLeft}</p>\n\n            <div>\n                <button\n                    aria-label={`start ${props.currentCounting}`} id=\"start_stop\" onClick={props.handleStartToggle} className='btn-level'>\n                    <i className=\"fa fa-play fa-3x\"></i>\n                    <i className=\"fa fa-pause fa-3x\"></i>\n                </button>\n                <button aria-label={`reset to session, 25 minutes.`} id=\"reset\" onClick={props.handleReset} className='btn-level'>\n                    <i className=\"fa fa-refresh fa-3x\"></i>\n                </button>\n            </div>\n\n        </div>\n    )\n}","import React from 'react';\nimport ControlPanel from './Pomodoro-sub/ControlPanel';\nimport DisplayPanel from './Pomodoro-sub/DisplayPanel';\n\nclass Pomodoro extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            breakLength: 5,\n            sessionLength: 25,\n            timeLeft: 1500,\n            counting: false,\n            currentCounting: 'Session',\n            english: true\n        };\n        this.handleReset = this.handleReset.bind(this);\n        this.clockify = this.clockify.bind(this);\n        this.handleStartToggle = this.handleStartToggle.bind(this);\n        this.tick = this.tick.bind(this);\n        this.handleInDecrement = this.handleInDecrement.bind(this);\n        this.handleDefaultBtn = this.handleDefaultBtn.bind(this);\n        this.handleLanguage = this.handleLanguage.bind(this);\n    }\n\n    handleLanguage() {\n        this.setState({\n            english: !this.state.english\n        });\n        if (this.state.english) {\n            document.documentElement.setAttribute('lang', 'zh-TW');\n        } else {\n            document.documentElement.setAttribute('lang', 'en');\n        }\n    }\n\n    handleReset() {\n        this.setState({\n            breakLength: 5,\n            sessionLength: 25,\n            timeLeft: 1500,\n            counting: false,\n            currentCounting: 'Session',\n        });\n        // reset should stop the timer as well\n        clearInterval(this.intervalID);\n\n        // and the audio\n        const audio = document.getElementById('beep');\n        audio.pause();\n        audio.currentTime = 0;\n\n        // and set the color back to default, if it is changed\n        document.getElementById('time-left').style.color = null;\n\n        // and the title\n        document.getElementsByTagName('title')[0].text = 'Pomodoro Clock';\n    }\n\n    handleDefaultBtn(e) {\n        // ignore click, while the clock is counting\n        if (this.state.counting) return;\n        // console.log(e.target.id);\n        if (e.target.id.includes('session')) {\n            this.setState({\n                sessionLength: 25,\n                timeLeft: 1500,\n                counting: false,\n                currentCounting: 'Session',\n            });\n        } else {\n            this.setState({\n                breakLength: 5,\n                timeLeft: 300,\n                counting: false,\n                currentCounting: 'Break',\n            });\n        }\n    }\n\n    handleInDecrement(e) {\n        // in case the clock is still running, disable handleInDecrement()\n        if (this.state.counting) return;\n        switch (`${e.currentTarget.id},current:${this.state.currentCounting}`) {\n            case 'break-decrement,current:Session':\n                if (this.state.breakLength > 1) {\n                    this.setState(state => ({\n                        breakLength: state.breakLength - 1,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'break-increment,current:Session':\n                if (this.state.breakLength < 60) {\n                    this.setState(state => ({\n                        breakLength: state.breakLength + 1\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'break-decrement,current:Break':\n                if (this.state.breakLength > 1) {\n                    this.setState(state => ({\n                        breakLength: state.breakLength - 1,\n                        timeLeft: state.timeLeft - 60,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'break-increment,current:Break':\n                if (this.state.breakLength < 60) {\n                    this.setState(state => ({\n                        breakLength: state.breakLength + 1,\n                        timeLeft: state.timeLeft + 60,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'session-decrement,current:Session':\n                if (this.state.sessionLength > 1) {\n                    this.setState(state => ({\n                        sessionLength: state.sessionLength - 1,\n                        timeLeft: state.timeLeft - 60,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'session-increment,current:Session':\n                if (this.state.sessionLength < 60) {\n                    this.setState(state => ({\n                        sessionLength: state.sessionLength + 1,\n                        timeLeft: state.timeLeft + 60,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'session-decrement,current:Break':\n                if (this.state.sessionLength > 1) {\n                    this.setState(state => ({\n                        sessionLength: state.sessionLength - 1,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            case 'session-increment,current:Break':\n                if (this.state.sessionLength < 60) {\n                    this.setState(state => ({\n                        sessionLength: state.sessionLength + 1,\n                    }));\n                    return;\n                } else {\n                    return;\n                }\n            default:\n                return;\n\n        }\n\n    }\n\n    tick() {\n\n        // change color when time left <= 60\n        if (this.state.timeLeft <= 60) {\n            document.getElementById('time-left').style.color = \"#F8BFCE\";\n        } else {\n            document.getElementById('time-left').style.color = null;\n        }\n        if (this.state.timeLeft <= 0) {\n\n            clearInterval(this.intervalID);\n            const audio = document.getElementById('beep');\n            audio.play();\n            const newCurrentCounting = (this.state.currentCounting === 'Session') ? 'Break' : 'Session';\n            const newTimeLeft = (this.state.currentCounting === 'Session') ? this.state.breakLength * 60 : this.state.sessionLength * 60;\n\n            document.getElementById('time-left').style.color = null;\n            this.setState({\n                timeLeft: newTimeLeft,\n                currentCounting: newCurrentCounting,\n            });\n            this.intervalID = setInterval(() => { this.tick() }, 1000);\n            return;\n        };\n\n\n\n        this.setState({\n            timeLeft: this.state.timeLeft - 1\n        });\n\n        document.getElementsByTagName('title')[0].text = `(${this.clockify(this.state.timeLeft)}) Pomodoro Clock`;\n\n    }\n\n    handleStartToggle() {\n        if (!this.state.counting) {\n            this.intervalID = setInterval(() => { this.tick() }, 1000);\n        } else {\n            clearInterval(this.intervalID);\n        }\n\n        this.setState(state => ({\n            counting: !this.state.counting,\n        }));\n\n    }\n\n    clockify(timeInSecs) {\n        let minutes = Math.floor(timeInSecs / 60);\n        let seconds = timeInSecs - 60 * minutes;\n        // insure mm:ss format at any time\n        seconds = (seconds < 10) ? '0' + seconds : seconds;\n        minutes = (minutes < 10) ? '0' + minutes : minutes;\n\n        return minutes + ':' + seconds\n    }\n\n    render() {\n\n        const controlPanelList = ['Break', 'Session'].map((v) => (\n            <ControlPanel\n                value={v}\n                key={`${v}-panel`}\n                currentCounting={this.state.currentCounting}\n                length={(v === 'Break') ? this.state.breakLength : this.state.sessionLength}\n                handleInDecrement={this.handleInDecrement}\n                handleDefaultBtn={this.handleDefaultBtn}\n                lang={this.props.lang}\n                LANG_MAP={this.props.LANG_MAP}\n            />\n        ));\n        return (\n            <div id='pomodoro-panel'>\n                <h1>{(this.props.lang === 'en') ? 'Pomodoro Clock' : this.props.LANG_MAP['Pomodoro Clock']}</h1>\n                <DisplayPanel\n                    timeLeft={this.clockify(this.state.timeLeft)}\n                    handleReset={this.handleReset}\n                    handleStartToggle={this.handleStartToggle}\n                    currentCounting={this.state.currentCounting}\n                    lang={this.props.lang}\n                    LANG_MAP={this.props.LANG_MAP}\n                />\n                <div id='control-panels-group' className='btn-group'>\n                    {controlPanelList}\n                </div>\n                <audio id=\"beep\" preload=\"auto\" src=\"https://raw.githubusercontent.com/tsunghao-huang/react-pomodoro/gh-pages/homeland.mp3\"></audio>\n            </div>\n\n        )\n    }\n}\n\nexport default Pomodoro;","import React, { useState } from \"react\";\n\nfunction Form(props) {\n    const [name, setName] = useState(\"\");\n\n    function handleChange(e) {\n        setName(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (name === \"\") return;\n        props.addTask(name);\n        setName(\"\");\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2 className=\"label-wrapper\">\n                <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n                    {(props.lang === 'en') ? 'What needs to be done?'\n                        : props.LANG_MAP['What needs to be done?']}\n                </label>\n            </h2>\n            <input\n                type=\"text\"\n                id=\"new-todo-input\"\n                className=\"input input__lg\"\n                name=\"text\"\n                autoComplete=\"off\"\n                value={name}\n                onChange={handleChange}\n            />\n            <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n                {(props.lang === 'en') ? 'Add' : props.LANG_MAP['Add']}\n            </button>\n        </form>\n    );\n}\n\nexport default Form;","import React from \"react\";\n\nfunction FilterButton(props) {\n    return (\n        <button\n            type=\"button\"\n            className=\"btn toggle-btn\"\n            aria-pressed={props.isPressed}\n            onClick={() => props.setFilter(props.name)}\n        >\n            <span className=\"visually-hidden\">Show </span>\n            <span>{(props.lang === 'en') ? props.name : props.LANG_MAP[props.name]} </span>\n            <span className=\"visually-hidden\"> tasks</span>\n        </button>\n    );\n}\n\nexport default FilterButton;","import { useRef, useEffect } from 'react';\n\nexport default function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}","import React, { useState, useRef, useEffect } from \"react\";\nimport usePrevious from \"./utils\";\n\nexport default function Todo(props) {\n\n    const editFieldRef = useRef(null);\n    const editButtonRef = useRef(null);\n\n    const [isEditing, setEditing] = useState(false);\n    const [newName, setNewName] = useState(props.name);\n    const wasEditing = usePrevious(isEditing);\n\n    function handleChange(e) {\n        setNewName(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (e.target.value === \"\") return;\n        props.editTask(props.id, newName);\n        // setNewName(\"\");\n        setEditing(false);\n    }\n\n    const editingTemplate = (\n        <form className=\"stack-small\" onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label className=\"todo-label\" htmlFor={props.id}>\n                    {(props.lang === 'en') ? `New name for ${props.name}` : `${props.name} 的新名字`}\n                </label>\n                <input\n                    id={props.id}\n                    className=\"todo-text\"\n                    type=\"text\"\n                    value={newName}\n                    onChange={handleChange}\n                    ref={editFieldRef}\n                />\n            </div>\n            <div className=\"btn-group\">\n                <button\n                    type=\"button\"\n                    className=\"btn todo-cancel\"\n                    onClick={() => setEditing(false)}\n                >\n                    {(props.lang === 'en') ? 'Cancel' : props.LANG_MAP['Cancel']}\n                    <span className=\"visually-hidden\">renaming {props.name}</span>\n                </button>\n                <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n                    {(props.lang === 'en') ? 'Save' : props.LANG_MAP['Save']}\n                    <span className=\"visually-hidden\">new name for {props.name}</span>\n                </button>\n            </div>\n        </form>\n    );\n    const viewTemplate = (\n        <div className=\"stack-small\">\n            <div className=\"c-cb\">\n                <input\n                    id={props.id}\n                    type=\"checkbox\"\n                    defaultChecked={props.completed}\n                    onChange={() => props.toggleTaskCompleted(props.id)}\n                />\n                <label className=\"todo-label\" htmlFor={props.id}>\n                    {props.name}\n                </label>\n            </div>\n            <div className=\"btn-group\">\n                <button\n                    type=\"button\"\n                    className=\"btn\"\n                    onClick={() => setEditing(true)}\n                    ref={editButtonRef}\n                >\n                    {(props.lang === 'en') ? 'Edit' : props.LANG_MAP['Edit']}\n                    <span className=\"visually-hidden\">{props.name}</span>\n                </button>\n                <button\n                    type=\"button\"\n                    className=\"btn btn__danger\"\n                    onClick={() => props.deleteTask(props.id)}\n                >\n                    {(props.lang === 'en') ? 'Delete' : props.LANG_MAP['Delete']}\n                    <span className=\"visually-hidden\">{props.name}</span>\n                </button>\n            </div>\n        </div>\n    );\n\n    useEffect(() => {\n        if (!wasEditing && isEditing) {\n            editFieldRef.current.select();\n            editFieldRef.current.focus();\n            // setNewName(props.name);\n        }\n        if (wasEditing && !isEditing) {\n            editButtonRef.current.focus();\n        }\n\n    }, [wasEditing, isEditing]);\n\n    return (\n        <li className=\"todo stack-small\">\n            {isEditing ? editingTemplate : viewTemplate}\n        </li>\n    );\n}","import React, { useState, useRef, useEffect } from 'react';\nimport \"./TodoApp.css\";\nimport Form from \"./TodoApp-sub/Form\";\nimport FilterButton from \"./TodoApp-sub/FilterButton\";\nimport Todo from \"./TodoApp-sub/Todo\";\nimport { nanoid } from \"nanoid\";\nimport usePrevious from \"./TodoApp-sub/utils\";\n\nconst FILTER_MAP = {\n    All: () => true,\n    Active: task => !task.completed,\n    Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nexport default function TodoApp(props) {\n\n    const localStorageKey = 'localTodo';\n    if (localStorage.getItem(localStorageKey) === null) {\n        localStorage.setItem(localStorageKey, JSON.stringify(props.tasks));\n    }\n    const localTodo = JSON.parse(localStorage.getItem(localStorageKey));\n    const [tasks, setTasks] = useState(localTodo);\n    const [filter, setFilter] = useState('All');\n\n    function updateLocalStorage(updatedTodos) {\n        // localStorage.removeItem(localStorageKey);\n        localStorage.setItem(localStorageKey, JSON.stringify(updatedTodos));\n    }\n\n    function addTask(name) {\n        const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n        setTasks([...tasks, newTask]);\n        updateLocalStorage([...tasks, newTask]);\n    }\n\n    function toggleTaskCompleted(id) {\n        const updatedTasks = tasks.map(task => {\n            // if this task has the same ID as the edited task\n            if (id === task.id) {\n                // use object spread to make a new obj\n                // whose `completed` prop has been inverted\n                return { ...task, completed: !task.completed }\n            }\n            return task;\n        });\n        setTasks(updatedTasks);\n        updateLocalStorage(updatedTasks);\n    }\n\n    function deleteTask(id) {\n        const remainingTasks = tasks.filter(task => id !== task.id);\n        setTasks(remainingTasks);\n        updateLocalStorage(remainingTasks);\n    }\n\n    function editTask(id, newName) {\n        const editedTaskList = tasks.map(task => {\n            // if this task has the same ID as the edited task\n            if (id === task.id) {\n                //\n                return { ...task, name: newName };\n            }\n            return task;\n        });\n        setTasks(editedTaskList);\n        updateLocalStorage(editedTaskList);\n    }\n\n    const taskList = tasks\n        .filter(FILTER_MAP[filter])\n        .map(task => (\n            <Todo\n                id={task.id}\n                name={task.name}\n                completed={task.completed}\n                key={task.id}\n                toggleTaskCompleted={toggleTaskCompleted}\n                deleteTask={deleteTask}\n                editTask={editTask}\n                lang={props.lang}\n                LANG_MAP={props.LANG_MAP}\n            />\n        ));\n\n    const filterList = FILTER_NAMES.map(name => (\n        <FilterButton\n            key={name}\n            name={name}\n            isPressed={name === filter}\n            setFilter={setFilter}\n            lang={props.lang}\n            LANG_MAP={props.LANG_MAP}\n        />\n    ));\n\n    const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n    let headingText;\n\n    if (props.lang === 'en') {\n        switch (filter) {\n            case 'All':\n                headingText = `${taskList.length} ${tasksNoun} in total`;\n                break;\n            default:\n                headingText = `${taskList.length} ${tasksNoun} ${filter.toLowerCase()}`;\n        }\n\n    } else {\n        headingText = `${props.LANG_MAP[filter]} ${taskList.length} 件事`;\n    }\n\n    const listHeadingRef = useRef(null);\n    const prevTaskLength = usePrevious(tasks.length);\n\n    useEffect(() => {\n        if (tasks.length - prevTaskLength === -1) {\n            listHeadingRef.current.focus();\n        }\n    }, [tasks.length, prevTaskLength]);\n\n    return (\n        <div id=\"todoapp\" className=\"stack-large\">\n            <h1>{(props.lang === 'en') ? 'Todos' : props.LANG_MAP['Todos']}</h1>\n            <Form addTask={addTask} lang={props.lang} LANG_MAP={props.LANG_MAP} />\n            <div className=\"filters btn-group stack-exception\">\n                {filterList}\n            </div>\n            <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n                {headingText}\n            </h2>\n            <ul\n                role=\"list\"\n                className=\"todo-list stack-large stack-exception\"\n                aria-labelledby=\"list-heading\"\n            >\n                {taskList}\n\n            </ul>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Pomodoro from './components/Pomodoro';\nimport TodoApp from './components/TodoApp';\n\nconst DATA = [\n    { id: \"todo-0\", name: \"Eat\", completed: true },\n    { id: \"todo-1\", name: \"Sleep\", completed: false },\n    { id: \"todo-2\", name: \"Repeat\", completed: false }\n];\n\nconst LANG_MAP = {\n    'Pomodoro Clock': '蕃 茄 鐘',\n    Session: '工 作',\n    Break: '休 息',\n    Todos: '待辦事項',\n    'What needs to be done?': '有事嗎？',\n    Add: '新增',\n    All: '全部',\n    Active: '待辦',\n    Completed: '完成',\n    Edit: '編輯',\n    Delete: '刪除',\n    Cancel: '取消',\n    Save: '儲存'\n};\n\nfunction App() {\n\n    const [lang, setLang] = useState('en');\n\n    function handleLanguage() {\n        (lang === 'en') ? setLang('zh-TW') : setLang('en');\n        document.documentElement.setAttribute('lang', lang);\n    }\n\n    return (\n        <div id=\"App\">\n            <button aria-label={`switch language to ${(lang === 'en') ? 'Mandarin' : 'English'}`} id='language-btn' onClick={handleLanguage}>{(lang === 'en') ? '繁體中文' : 'English'}</button>\n            <Pomodoro lang={lang} LANG_MAP={LANG_MAP} />\n            <TodoApp tasks={DATA} lang={lang} LANG_MAP={LANG_MAP} />\n        </div>\n\n    )\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}